<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【學習筆記】資料結構導論]]></title>
    <url>%2Fposts%2F8937%2F</url>
    <content type="text"><![CDATA[由於是個人的學習筆記，因此有可能存在錯誤，若有發現錯誤之處煩請糾正或者一起討論！大綱認識資料與資訊的關係何謂資料結構(Data Structure)?何謂演算法(Algorithm)?程式設計概念演算法的效率與評估認識資料與資訊的關係以下內容參考何謂資訊?何謂資料?其兩者關系為何? - 奇摩知識+資料對於電腦的資料處理模式而言，未經處理而直接輸入電腦預備進行處理的數據稱為資料(Data)。通常資料指未知數據代表性的數據集合，亦即對事實的紀錄。資料依其特性亦可分為類比資料(例如溫度，聲波，色彩等)與數位資料(例如電壓)。資訊指經過電腦處理後，對資料輸入者而言，具有特定意義的資料集合。因此：資料(Data) -&gt; 經過處理與整理 -&gt; 資訊(Information)。例如今天有一份表格記錄著班級的期中考試成績，這些成績就是資料，而總成績、平均成績、排名則是資訊。這些資訊可以提供我們判斷及做決策的依據。程式設計 = 資料結構 + 演算法因此我們需要選擇適當的"資料結構"設計出最有效率的"演算法"，進而轉換成有效率的"程式"。何謂資料結構(Data Structure)?在電腦科學中，資料結構（英語：data structure）是電腦中儲存、組織資料的方式。 資料結構意味著介面或封裝：一個資料結構可被視為兩個函式之間的介面，或者是由資料類型聯合組成的儲存內容的存取方法封裝。 大多數資料結構都由數列、記錄、可辨識聯合、參照等基本類型構成。舉例而言，可為空的參照（nullable reference）是參照與可辨識聯合的結合體，而最簡單的鏈式結構連結串列則是由記錄與可空參照構成。 資料結構可透過程式語言所提供的資料類型、參照及其他操作加以實現。一個設計良好的資料結構，應該在儘可能使用較少的時間與空間資源的前提下，支援各種程式執行。 . . . －－－維基百科太生澀難懂了！有沒有更簡潔有力一點的解釋？ 資料結構就是在探討如何將資料有組織的存放在記憶體中，以提升程式 的執行效率。靜態與動態資料結構靜態(Static)資料結構：所謂靜態資料結構，是指資料所占用的空間大小及資料數目都必須事先宣告，因此在程式編譯的同時，空間的大小及資料數目就無法改變了。動態(Dynamic)資料結構：所謂動態資料結構，資料所使用之空間大小及資料數目都不必事先宣告，在程式執行時才做記憶體的空間配置。陣列的使用就是靜態資料結構的代表，而動態資料結構則以鏈結串列結構為代表。常見的資料結構串列 (List): 先來先買，或稱序列 (sequence)陣列 (Array)堆疊 (Stack): 後進先出，又稱為棧或堆棧佇列 (Queue)樹狀結構 (Tree)圖形結構 (Graph)…等，不只這些，其他的以後再說。串列(List)有序的物件集合，具有索引特性，長度可以變動。資料排成一列，便於追加與刪除，缺點是存取資料較費時。每一個資料和一個指標 (Pointer) 配對，指向下一筆資料在記憶體中的位址。尤指連結串列(linked list)。下方就是宣告串列的程式碼：12numbers = [10, 20, 30, 40]print(numbers[0]) //列印串列第一筆資料指標(Pointer)是程式語言中的一類資料類型及其物件或變數，用來表示或儲存一個記憶體位址，這個位址的值直接指向（points to）存在該位址的物件的值。陣列(Array)占用連續記憶體空間。用來表示有序串列之一種方式。各元素的資料型態皆相同。支援隨機存取與循序存取。插入或刪除元素時較為麻煩，因為需挪移其他元素。下方就是宣告陣列的程式碼：12int[] data = new int[100]; //宣告陣列大小data[0] = 1; //陣列第一格存放的整數是1串列(List)和陣列(Array)區別在串列(List)只允許順序存取，而陣列(Array)允許隨機存取。但串列(List)比陣列(Array)更有彈性，且不必事先宣告大小的變數。堆疊(Stack)堆疊原理為後進先出(LIFO, Last In First Out)。只允許在最新的資料那端操作。加入資料稱為Push(推入)，移除資料稱為Pop(彈出)。常與另一種有序的線性資料集合 佇列 相提並論。堆疊常用 一維陣列 或 連結串列 來實現。佇列(Queue)佇列原理為先進先出(FIFO, First-In-First-Out)。似堆疊，但佇列可以在兩端進行資料操作。佇列只能在後端(rear)插入操作，稱為進入佇列(Enqueue)；只能在前端(front)刪除資料，稱為輸出佇列(Dequeue)。樹狀結構(Tree)依照圖來看它是一個上下顛倒的樹，其根部在上方，是資料的開頭，而下方的資料稱為葉子。圖形結構(Graph)圖形很像樹狀結構，不同的地方是節點之間沒有父子關係。請參考認識圖形結構何謂演算法(Algorithm)?用於有限步驟內解決一個特定問題。例如：你可以稱之為「應對燈泡不亮的簡單演算法」。演算法的特性一個演算法需要俱備的五個特性：輸入(Input)、輸出(Output)、明確性(Definiteness)、有限性(Finiteness)、有效性(Effectiveness)不一定要有輸入，但至少要有一個輸出。明確性每一行指令都必須明確，不可模稜兩可。今天有一個情境，需要判斷某數值是否為偶數。(1)輸入一個正整數(2)作餘數運算是否為0(3)為0即為偶數從演算法觀點來看，第二點並不符合明確性，因為並無說明餘數運算是如何運算。應該改寫成：(1)輸入一個正整數N(2)除果N除以為其餘數為0(3)則其N為偶數有限性演算法必須能終止執行，亦即必須在有限的步驟內完成。必須說的是：真正的程式是可以有無窮迴路的動作，但演算法並非是真正可以執行的程式。例如：Windows作業系統除非系統關機或當機，否則它會永遠執行「等待迴圈」，等待使用者從輸入設備輸入指令。有效性演算法的處理動作必須是有效且具體可行的，同時能讓使用者使用紙筆計算獲得答案。因此，演算法是一個演算法是明確、有效、最終會結束的可執行步驟。描述演算法的方法描述演算法的方法有：文字描述流程圖(Flow Chart)虛擬碼(Pseudo Code)電子電路數學…等流程圖利用「流程圖」來描述使用者登入帳號與密碼時，系統檢查的過程。虛擬碼兼具文字描述及流程圖的優點，其方式是用文字摻雜程式語言，來描述解題步驟與方法。12345Input: UserName,PasswordIF(UserName and Password) ALL TrueOutput: You Can Pass!elseOutput: You Can't Pass!資料結構中一般都是利用虛擬碼(Pseudo Code)來表示演算法。演算法的基本結構循序 (Sequence) 結構依先後順序，一個步驟接著一個步驟依序執行。選擇 (Selection) 結構依據不同的條件，選擇不同的解題步驟執行。重複 (Iteration) 結構部分解題步驟需要反覆執行，直到符合或是不符合某一條件式時，才會離開重複執行的部份。重複結構也常被稱為「迴圈 (Loop)」 。程式設計概念分析所要解決的問題(需求)設計解題的步驟(演算法)例如Binary Search(二分搜索算法)編寫程式(程式碼)上機測試,偵測錯誤(debug)Programming Language Error:(1)Syntax Error(語法錯) - 只在編譯時出現(Compiler Time)例如以下的程式是正確的：1System.out.println("Hello World");以下的程式不正確：1System.out.println(Hello World);第二個程式理論上要顯示的是叫作Hello World的變數，而不是Hello World這個字，且Java語言的變數名稱中不可有空白，因此會出現語法錯誤。(2)Semantic Error(語意錯) - Logical Error程式語法雖然正確但無法提供正確的功能。例如用C語言計算平均數，以下程式雖然能夠通過編譯並執行，但結果是錯誤的。1234int average(int a, int b){ return a + b / 2; /* 應為 (a + b) / 2 */}Debug methods:(1) Single steps(2) Breaking Point Setting編寫程式說明書(可執行)演算法 VS 程式演算法是以人為主，任何人都可以閱讀的程式碼，強調「可讀性」。程式是以電腦為主，強調執行結果正確性(Correctness)、可維護性(Maintainable)及執行效率(Performance)。演算法的效率評估評估演算法的三種方法：最差狀況分析(Worst-case analysis) [最廣用]在所有可能的輸入組合下最多所需要的時間(Upper bound)，O(n)最常被使用來表示理論「上限」。平均狀況分析(Average-case analysis)在所有可能的輸入組合下平均所需時間(Average Time)。最佳狀況分析(Best-case analysis)分析演算法對何種輸入資料所需花費的時間最少(Lower bound)。基本上時間複雜度的分析比空間複雜度來的重要，因為當資料量龐大時，時間複雜度會有較大的差異性，空間複雜度則差異較小，再加上目前的記憶體相當便宜，因此目前在資料結構所探討演算法之效率評估，都著重在時間複雜度方面。1.時間複雜度(Time Complexity)定義：演算法執行時，所需花費的時間。分析方法：統計演算法中指令執行的次數。(演算法有多快不是以秒衡量，而是以步驟次數。)註解、括號、函式宣告及變數宣告不列入執行時間計算。變數宣告時若有指派初始值，則視為1次。函式呼叫視為1次。不考慮指令本身的複雜度或實際執行時間，一個指令皆視為1次。範例：//假設某電腦執行加法要5微秒，減法要10微秒，乘法要20微秒。不管實際執行時間A=0、A++、A--、A=A*5都視為執行一次。範例：1234567891011int sum(int[] data) // 0次{ // 0次 int i; // 0次 int sum = 0; // 1次 //for迴圈最後會判斷條件不成立，跳離迴圈，所以比其內容多執行一次 for(i = 0; i &lt; data.length; i++){ // data.length+1次 sum += data[i]; // data.length次 } // 0次 return sum; // 1次}時間複雜度常用大O符號表述一個演算法在輸入 n 個東西時，總執行時間與 n 的關係。時間複雜度的公式是： T(n) = O( f(n) )，其中f(n) 表示每行代碼執行次數之和，這個公式的全稱是：算法的漸進時間複雜度。如果一個演算法對於任何大小為ｎ（必須比n0大）的輸入，它至多需要 5n^3 + 3n的時間執行完畢，那麼它的漸近時間複雜度是 O(n^3)。取執行次數中最高次方或最大指數部分O(1)123function(int n){ print(n); # 1 次}O(n)12345function(int n){ for(i=0; i&lt;n ;i++){ # n+1 次 print(i); #輸入的 n 的數量會跑 n 次 }}O(n²)1234567function(int n){ for(i=0; i&lt;n; i++){ # n+1 次 for(j=0; j&lt;n ;j++){ # n*(n-1) 次 print(i * j); #n²次 } }}常見的六種時間複雜度與演算法O(1)：陣列讀取O(n)：簡易搜尋O(log n)：二分搜尋O(nlogn)：合併排序O(n²)：選擇排序O(2^n)：費波那契數列時間複雜度的比較2.空間複雜度(Space Complexity)定義：演算法執行時，所需花費的記憶體。分析方法：統計演算法中所使用的固定空間(Fixed Space)和變動空間(Variable Space)。固定空間(Fixed Space, C)：非主要考量程式碼大小(Instruction Space)簡單變數(EX：int, float,…)常數固定大小的結構變數(EX：陣列、記錄、…等）變動空間(Variable Space, SP )參數：以傳值呼叫(Call By Value)傳遞的參數(EX：陣列)遞迴所需的堆疊空間固定空間通常都是必要的，所以當有使用空間限制的需求時，只會考慮能否節省變動空間。空間函式S(P)：表示當輸入資料量為n時，演算法中指令所需執行的次數。格式：S(P) = C + SP參考：[資料結構] 演算法評估與資料型別O(1)不會影響使用的變數數量。12345function(int n){ for(int i=0;i&lt;n;i++){ print(i); }}O(n)會隨著丟進去的數字而影響變數的量。123456function(int n){ int c[n]; for(int i=0;i&lt;n;i++){ c[i] = i; }}參考資料《演算法圖鑑》第一章：資料結構演算法的表示–流程圖【演算法】入門介紹－什麼是演算法 What’s Algorithm?初學者學演算法｜從時間複雜度認識常見演算法（一）資料結構筆記(一)：演算法、時間複雜度、空間複雜度初學者學演算法｜談什麼是演算法和時間複雜度Second Round 目錄：演算法與資料結構程式語言的控制結構[資料結構] 演算法評估與資料型別算法的时间与空间复杂度（一看就懂）基礎電腦科學：演算法概要 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>資料結構</category>
      </categories>
      <tags>
        <tag>資料結構</tag>
        <tag>學習筆記</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安裝Hexo Next主題網頁顯示空白]]></title>
    <url>%2Fposts%2F51517%2F</url>
    <content type="text"><![CDATA[前言終於還是從Butterfly轉成Next主題了，每次爬文發現大家都使用next主題做教程，有些檔案在我的主題裡名稱不一樣甚至格式也不一樣導致code寫法不同，找尋這些花了不少時間，最終決定也合流使用next主題了(畢竟懶…)。但是在我安裝next主題之後打開網頁卻是空白的，搞了半天發現是motion設置的問題，修改成false之後就可以正常開啟了。問題安裝/換成 next 主題"有可能"遇到以下問題：motion未設置成falseGitHub Pages 禁止了 source/vendors 目錄訪問theme設置處缺少空白或格式錯誤沒有hexo clean解決方式motion設置我猜測可能是頁面動畫導致網頁顯示空白，因此我將它設置成false就能正常顯示了。GitHub Pages 禁止了 source/vendors 目錄訪問我倒是沒遇到這個問題，有這個問題的可以參考：Hexo next 主题显示全白是什么原因？请问hexo next主题deploy到GitHub后不显示内容只显示框架这个问题怎么解决？網站配置文件中theme格式錯誤注意格式必須為以下：1theme: nexttheme:後方必需要有一個半形空格，且theme前方不能有別的東西。安裝主題後沒有hexo clean1hexo cleanhexo clean用來清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。每次安裝完主題記得要clean。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 在BLOG中插入Emoji表情]]></title>
    <url>%2Fposts%2F25926%2F</url>
    <content type="text"><![CDATA[🍑 🍇 🍐 🍓 🍌 🍉 🍍 🍋 🍎HEXO預設的markdown渲染器是hexo-renderer-marked，這個渲染器並不支援插件擴展，所以我們需要卸載它改裝hexo-renderer-markdown-it 。而hexo-renderer-markdown-it 原裝包含了以下插件：- markdown-it-abbr- markdown-it-footnote- markdown-it-ins- markdown-it-sub- markdown-it-sup並不包含emoji插件，因此我們還要安裝markdown-it-emoji來插入表情。安裝STEP 1首先卸載hexo-renderer-marked然後再安裝hexo-renderer-markdown-it。12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-markdown-it --saveSTEP 2安裝markdown-it-emoji：1npm install markdown-it-emoji --saveSTEP 3打開 config.yml 加入以下內容：123456789101112131415161718192021markdown: render: html: true xhtmlOut: false breaks: true linkify: true typographer: true quotes: '“”‘’' plugins: - markdown-it-abbr - markdown-it-footnote - markdown-it-ins - markdown-it-sub - markdown-it-sup - markdown-it-emoji anchors: level: 2 collisionSuffix: 'v' permalink: true permalinkClass: header-anchor permalinkSymbol: ''STEP 4使用方法：在 emoji-cheat-sheet 中查找想貼上的表情，例如 💥則直接在文章中對應編碼 :boom: 就能顯示。參考資料hexo-renderer-markdown-it document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - SEO優化篇]]></title>
    <url>%2Fposts%2F7993%2F</url>
    <content type="text"><![CDATA[首先嘗試在google搜索 site:你的域名，來確認你的BLOG有沒有被收錄，能搜索到代表有被收錄，若無則沒有。一般優化文章鏈接優化請參考：Hexo 搭建系列 - Hexo-Abbrlink插件 永久鏈接增加 nofollow標籤這是反垃圾鏈接標籤，用於指示搜尋引擎不要抓取網頁上帶有nofollow標籤的任何出站鏈接，減少垃圾鏈接分散網站權重。你可以使用 hexo-filter-nofollow 插件。添加robots.txt在./source新建robots.txt 填寫以下內容：123456789101112User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/ Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: http://你的網域/sitemap.xmlUser-agent: * 表示運行所有的搜尋引擎，你也可以設定只允許特定的搜尋引擎爬取，例如User-agent: GooglebotAllow表示允許被訪問的，Disallow是不允許的意思。Disallow不添加任何路徑就表示運行爬取任何內容。(若要Disallow多個資料夾或檔案,需要分成多行來寫,一行只能寫一個)關鍵詞與描述在\scaffolds\post.md中添加如下代碼，用於生成的文章中添加關鍵字和描述。12keywords:description:Sitemap什麼是 Sitemap？「Sitemap」是一種檔案，您可以在其中提供網站中網頁、影片和其他檔案的相關資訊，並說明各種網頁和檔案之間的關係。Google 這類搜尋引擎會讀取 Sitemap 檔案，以更靈活的方式檢索您的網站。Sitemap 會向檢索器顯示您認為網站上的哪些檔案較為重要，並針對這類檔案提供有價值的資訊：舉例來說，Sitemap 會針對網頁提供最近更新時間、變更頻率以及替代語言版本等相關資訊。您可以透過下列幾種方式讓 Google 存取您的 Sitemap：使用 Search Console Sitemap 工具向 Google 提交 Sitemap在 robots.txt 檔案中任一處插入以下這一行字元，指定 Sitemap 的路徑。1Sitemap: http://example.com/sitemap.xml透過「連線偵測 (ping)」功能要求 Google 檢索您的 Sitemap。請按照下列方式傳送 HTTP GET 要求：1http://www.google.com/ping?sitemap=&lt;complete_url_of_sitemap&gt;例如：1http://www.google.com/ping?sitemap=https://example.com/sitemap.xmlSTEP 1安裝hexo-sitemap-generator外掛可以自動幫你的BLOG產生Sitemap.xml，你只需要打開BLOG根目錄Git Bash輸入以下指令：1npm install hexo-generator-sitemap --save安裝完後瀏覽你的 網址/sitemap.xml，就會發現已經生成了。可以把sitemap提交到GSC來增加收錄。STEP 2設定config.yml。12sitemap: path: sitemap.xmlSTEP 3註冊Google Search Console https://search.google.com/search-console/about?hl=zh-tw使用google帳號登陸即可。貼上BLOG網址點擊「繼續」，因為我已經加入Google Analytics到我的BLOG，所以我可以通過Google Analytics帳號來驗證。你也可以在 [設定 - 擁有權驗證 - 其他驗證方法] 使用其他方法驗證。STEP 4到 [Google Search Console後台 - Sitemap - 新增Sitemap] 填寫sitemap.xml。等待幾天就能夠在google上搜尋到自己的網站了。Google無法讀取sitemap(一般的HTTP錯誤) 解決方式我剛開始提交sitemap的時候試了無數次發現總是出現無法讀取 Sitemap ,一般的 HTTP 錯誤這個錯誤，為此我在google上查找了許久都沒有找到解決方式，於是我開始閱讀 google的sitemap說明，在Sitemap 格式處發現了問題所在。若你跟我有一樣的問題，你可以打開 你的網址/sitemap.xml 查看你的時間格式是否為 &lt;lastmod&gt;2019-09-29T09:52:32Z&lt;/lastmod&gt;你能發現跟官方的&lt;lastmod&gt;2018-06-04&lt;/lastmod&gt; 差在多了後面多了T時分秒Z…等一些沒必要的格式，我猜這就是問題所在，於是google搜尋了解決辦法，參考Convert an ISO date to the date format yyyy-mm-dd in JavaScript找到了解決辦法。以下是解決方式：打開 .\node_modules\hexo-generator-sitemap\sitemap.xml 在1post.updated.toISOString()後方加上1.substring(0, 10)substring(Start,End) 意思是擷取從0開始到9位數(End位數不會擷取)，本來是2019-09-29T09:52:32Z，就只會擷取到2019-09-29，這樣就是官方所要求的格式。重新提交sitemap之後等待一會就會顯示成功了。現在已經能在google搜尋到我的網站了。參考資料hexo-generator-sitemapHexo 优化：提交 sitemap 及解决百度爬虫无法抓取 GitHub Pages 链接问题Hexo做SEO优化遇到的坑Hexo Seo优化让你的博客在google搜索排名第一管理您的 Sitemap,建立並提交 SitemapConvert an ISO date to the date format yyyy-mm-dd in JavaScript document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 為HEXO安裝Disqus評論功能]]></title>
    <url>%2Fposts%2F38797%2F</url>
    <content type="text"><![CDATA[註冊與安裝STEP 1到Disqus官網選擇GET STARTED 然後註冊一個帳號(在此省略註冊過程)。STEP 2登入Diqcus之後選擇[I want to install Disqus on my site]。STEP 3填入網站資料(沒重複的話，Website name就是你的shortname)。STEP 4到Admin - Settings - General - shortname，確認一下你的shortname。注意：若你的Websit Name重複，shortname則將與Websit Name不同，請務必注意。STEP 5打開config.yml加入以下內容：大於5.1.1版本：12345#Disqusdisqus: enable: true #開啟功能 shortname: 你的shortname count: true #在文章中顯示評論數量小於5.1.1版本 則設定shortname值即可：12#Disqusdisqus_shortname: 你的shortname大部分HEXO主題都可以設定是否開啟disqus功能(如NexT,Butterfly…等)，打開主題的配置文件搜索disqus試試吧。效果演示：Reactions功能Admin - Settings - Reactions - Enable Reactions on your site.若想要關閉Reactions功能則點擊下方[Turn reactions off]即可。Reactions功能效果： document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[線上快速將Twitter影片轉成GIF檔]]></title>
    <url>%2Fposts%2F19600%2F</url>
    <content type="text"><![CDATA[EZGIF網址：https://ezgif.com/video-to-gif使用方法格式：MP4, WebM, AVI, MPEG, FLV, MOV, 3GP and other video files | 大小限制：100MBSTEP 1在Twitter上找到想轉換成GIF的影片，在影片上點擊右鍵－複製影片地址STEP 2貼到Video to GIF converter 點擊upload video即可。EZGIF提供了簡單的功能，例如畫面裁剪、影片裁剪、旋轉、縮放、修改速度、加字、自行選擇FPS和大小…等。轉換後直接在GIF上點擊右鍵儲存圖片。範例 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>線上工具</category>
      </categories>
      <tags>
        <tag>Twitter</tag>
        <tag>GIF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手動安裝Google Chrome 擴充功能]]></title>
    <url>%2Fposts%2F58580%2F</url>
    <content type="text"><![CDATA[此方法適用於 開發者已下架或是遭官方下架無法從擴充商店安裝的擴充功能，但你能在其他地方找到.CRX檔或資料夾。 教程以 Listen 1作為範例。STEP 1打開Chrome瀏覽器的擴充功能頁面 ( 或者在網址輸入 chrome://extensions/)。STEP 2在右上角打開[開發人員模式] 左邊選擇[載入未封裝項目]。STEP 3選擇擴充功能資料夾。STEP 4開啟擴充功能即可在瀏覽器右上方看見，並且使用。若擴充功能非資料夾而是.CRX檔，請使用7-ZIP解壓縮放進資料夾後按以上步驟載入。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 利用HEXO-ADMIN插件後台管理BLOG]]></title>
    <url>%2Fposts%2F19908%2F</url>
    <content type="text"><![CDATA[安裝在BLOG根目錄使用GIT BASH 輸入下方指令安裝HEXO-ADMIN，並開啟本地測試。123npm install --save hexo-adminhexo server -dopen http://localhost:4000/admin/安裝成功後打開瀏覽器輸入就能看見後台。但這樣還不算完成，我們還需要在BLOG根目錄新建檔案hexo-generate.bat，寫入hexo g -d。然後打開config.yml，新增：12admin: deployCommand: 'hexo-generate.bat'若不添加則會出現Error: Config value "admin.deployCommand" not found或者Error: spawn hexo ENOENT之類的報錯。你還可以在設定後台帳號和密碼。Settings - Setup authentification here.輸入帳號密碼，下方Admin Config Section會自動產生相對應的code，你只需要複製貼上到剛剛config.yml的admin處即可。部署方式後台 - Deploy - 直接點擊Deploy鍵，若無出現錯誤就是部署成功了。參考資料jaredly/hexo-admin document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 在文章中插入色碼方塊]]></title>
    <url>%2Fposts%2F25045%2F</url>
    <content type="text"><![CDATA[安裝方式在blog根目錄右鍵-&gt;Git Bash 輸入指令：1npm i hexo-tag-color-block使用方式直接在文章中加入語法：1{% colorblock [color hex code] [width] [height] %}色碼表DEMO：&nbsp;#E6E6FA配置預設寬高在config.yml中加入：12345code_block: width: height: # whether you want to show hex code text:Default:1234code_block: width: 10 height: 10 text: true參考資料hexo-tag-color-block document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - hexo-abbrlink插件 永久鏈接]]></title>
    <url>%2Fposts%2F2470%2F</url>
    <content type="text"><![CDATA[前言打開_config.yml 可以看到預設的永久鏈接是依照日期來產生的。1permalink: :year/:month/:day/:title/假設hello world.md原路徑為/source/_posts/hello world.md按照預設的鏈接來生成靜態文件後路徑會變成/public/2019/09/23/hello world/index.html但是這樣的缺點是 鏈接太長，所以在這邊推薦一個插件abbrlink來調整，abbrlink的概念是對標題+時間進行md5然後再轉base64，保存在front-matter中。安裝在blog根目錄下git bash 輸入指令 npm install hexo-abbrlink --save 安裝abbrlink接著在_config.yml 的permalink後面改成如下格式：1permalink: posts/:abbrlink/接著在下方隨機處加上：123abbrlink: alg: crc32 #support crc16(default) and crc32 ,crc16的最大帖子數是65535。 rep: hex #support dec(default) and hex有兩種設置：alg(算法)：crc16(默認)或crc32rep(表示)：dec(默認，十進制)或hex(十六進制)以下是各種搭配的效果範例crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html只要打開文章.md就能在配置區看到自動產生的 abbrlink: 編號 啦！更多信息參考資料hexo-abbrlinkhexo指南 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>abbrlink</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 基礎寫作流程篇]]></title>
    <url>%2Fposts%2F51388%2F</url>
    <content type="text"><![CDATA[前言Hexo系統寫作透過Markdown語法來寫作，若是對Markdown不熟悉，可以參考這個網站。Markdown寫作環境以下推薦免費並且親測可用的Markdown軟體以及在線編輯器。Markdown編輯軟體MarkdownPad (for Windows 適合新手) - https://markdownpad.com/BookPad - https://sosfos.wordpress.com/Boost Note - https://boostnote.io/Bear (iPhone, iPad, and Mac適合新手) - https://bear.app/Typora - https://typora.io/Zettlr - https://www.zettlr.com/SimpleMDE - https://simplemde.com/Sublime Text 3 - https://www.sublimetext.com/Atom - https://atom.io/Smark - https://gitee.com/elerao/SmarkMou(OS X 10.7 to 10.11 適合新手) - http://25.io/mou/Miu - https://github.com/egoist/MiuCommonMark - https://commonmark.org/Ghostwriter(for Windows and Linux) - https://wereturtle.github.io/ghostwriter/Notable - https://github.com/notable/notable在線Markdown編輯器MEditor(適合新手) - https://pandao.github.io/editor.md/en.htmlStack Edit (適合新手) - https://stackedit.io/DILLINGER (推薦老手使用) - https://dillinger.io/Markdown Live Preview (推薦老手使用) - https://markdownlivepreview.com/寫作流程創建文章：1hexo new [layout] &lt;title&gt;編輯文章：通過Markdown編輯器修改。發布文章：將文章發布到你的blog上。創建文章通過Git Bash輸入指令1hexo new [layout] &lt;title&gt;創建文章。您可以在指令中指定文章的佈局（layout），預設為 post，您可以透過修改_config.yml 中的 default_layout 設定來指定預設佈局。佈局（Layout）Hexo 有三種預設佈局：post、page 和 draft，它們分別對應不同的路徑，而您所自定的其他佈局和 post 相同，都儲存至 source/_posts 資料夾。佈局 路徑post(發表) source/_postspage(頁面) sourcedraft(草稿) source/_drafts檔案名稱Hexo 預設以標題做為檔案名稱，但您可編輯 new_post_name 設定來變更預設的檔案名稱，舉例來說，設為1:year-:month-:day-:title.md可讓您更方便的透過日期來管理文章。變數 描述:title 標題:year 建立年份（4 位數）:month 建立月份（2 位數）:i_month 建立月份（去掉開頭的零）:day 建立日期（2 位數）:i_day 建立日期（去掉開頭的零）草稿在建立時會被儲存於 source/_drafts 資料夾，你可以透過1hexo publish [layout] &lt;title&gt;將草稿從source/_drafts資料夾移動到 source/_posts 資料夾。在執行時加上 --draft 選項，或是把 render_drafts 設定改為 true 來預覽草稿。鷹架（Scaffold）在建立文章時，Hexo 會根據 scaffolds 資料夾內相對應的檔案來建立檔案，例如：hexo new photo "My Gallery"在執行這行指令時，Hexo 會嘗試在 scaffolds 資料夾中找尋 photo.md，並根據其內容建立文章，以下是您可在鷹架中使用的變數：變數 描述layout 佈局title 標題date 檔案建立日期編輯文章Front-matter 是檔案最上方以 — 分隔的區域，用於指定個別檔案的變數，舉例來說：12345678---title: Hello Worlddate: 2019/9/22 20:46:25categories: - hi - hellotages: [hi,hello]---以下是預先定義的設定，您可在模板中取得這些設定值並加以利用。設定 描述 預設值layout 佈局title 標題date 建立日期 檔案建立日期updated 更新日期 檔案更新日期comments 開啟文章的留言功能 truetags 標籤（不適用於分頁）categories 分類（不適用於分頁）permalink 覆蓋文章網址keywords 僅用在 meta 和 Open Graph 的關鍵詞（不建議使用）分類和標籤分類和標籤只有文章才支援，您可以在 Front-matter 中設定。在其他系統中，分類和標籤可能聽起來很接近，但是在 Hexo 中有著決定性的差別：分類是有順序和階層性的，也就是說 Foo, Bar 不等於 Bar, Foo；而標籤沒有順序和階層。12345categories:- Diarytags:- PS3- Games此外我們可以透過 list 來對一篇文章同時定義多個分類。1234categories:- [Diary, PlayStation]- [Diary, Games]- [Life]JSON Front-matter除了 YAML 外，你也可利用 JSON 來撰寫 Front-matter，只要將 — 代換成 ;;; 即可。123"title": "Hello World","date": "2013/7/13 20:46:25";;;強制換行只需要輸入1&lt;br/&gt;例如：我想換行，換行。插入圖片1![描述文字](圖片路徑或URL)插入指定大小圖片1{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}插入鏈接1![文字](鏈接 "文字")效果：我的部落格表格12345| 表頭1|表頭2|表頭3|表頭4|-| :- | :-: | -: ||默認左對齊|左對齊|居中對齊|右對齊||默認左對齊|左對齊|居中對齊|右對齊||默認左對齊|左對齊|居中對齊|右對齊|效果：表頭1表頭2表頭3表頭4默認左對齊左對齊居中對齊右對齊默認左對齊左對齊居中對齊右對齊默認左對齊左對齊居中對齊右對齊繼續閱讀插入&lt;!--more--&gt;更多語法請參考：Markdown Guide基礎語法 和 Markdown Guide擴展語法插入注腳需要安裝 hexo-footnotes 插件在blog根目錄Git bash執行：1npm install hexo-footnotes --save打開_config.yml下方加入12plugins: - hexo-footnotes使用方法：12345678910basic footnote[^1]here is an inline footnote[^2](inline footnote)and another one[^3]and another one[^4][^1]: basic footnote content[^3]: paragraphfootnotecontent[^4]: footnote content with some [markdown](https://en.wikipedia.org/wiki/Markdown)效果：插入音樂插入音樂，需要使用插件hexo-tag-aplayer，語法如下：1{% meting "id" "server" "type" "autoplay" "mutex:false" "listmaxheight:340px" "preload:none" "theme:#ad7a86"%}插入網易雲歌單1{% meting "歌單id號" "netease" "playlist" "autoplay" "theme:#555" "mutex:true" "listmaxheight:340px" %}console.error("ReferenceError: value is not defined")Hexo 搭建系列 - 插入音樂與影片hexo-tag-aplayer 本站測試插入影片Youtube1{% youtube video_id %}B站12&lt;iframe width="100%" height="400" src="//player.bilibili.com/player.html?aid=67104528&amp;cid=118581353&amp;page=2" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt;或者可以安裝hexo-tag-bilibili插件。通用123&lt;video width="100%" height="400" src="movie.mp4" controls="controls"&gt;The `&lt;video&gt;` tag is not supported by your browser.&lt;/video&gt;插入HEXO自帶圖標HEXO自帶Font Awesome的所有圖標，可以貼上HTML來使用。例如：1&lt;i class="fas fa-cat"&gt;&lt;/i&gt;顯示效果 發布文章只需要生成加部署兩步驟即可。12hexo generatehexo deploy你也可以將這兩個命令縮成一句hexo g -d 參考資料Hexo 寫作文件Markdown語法說明Hexo Markdown 简明语法手册 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HELLO]]></title>
    <url>%2Fposts%2F57665%2F</url>
    <content type="text"><![CDATA[一個測試文章Emoji表情測試❤️💙💜🖤💔❣️💕💞💓test hexo-admintest代碼測試123code here+ lowe- fkdosp document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[Github + Hexo 新手搭建手冊(含各種TIPS與問題解決)]]></title>
    <url>%2Fposts%2F30115%2F</url>
    <content type="text"><![CDATA[什麼是 Hexo？Hexo 是一個快速、簡單且強大的網誌框架。Hexo 使用 Markdown（或其他渲染引擎）解析您的文章，並在幾秒鐘內，透過漂亮的主題產生靜態檔案。因為它能快速並且簡單的搭建自己的部落格，因此越來越多人開始使用HEXO。你可以很輕易地透過官網的教程安裝HEXO，但若你是對這方面完全陌生的"小白"，你可以透過本篇文章完美安裝HEXO，在教程當中會提供各種可能在安裝過程中會遇到的錯誤解決方式，若還是無法成功安裝的人歡迎在回覆當中詢問，我會嘗試幫你解答。準備工作你只需要安裝以下兩種軟體，就可以開始搭建。Node.js (建議使用10.0及以上版本)Git什麼是Node.js？Node.js是一個能夠在伺服器端運行JavaScript的開放原始碼、跨平台JavaScript執行環境。Node.js大部分基本模組都用JavaScript語言編寫。在Node.js出現之前，JavaScript通常作為用戶端程式設計語言使用，以JavaScript寫出的程式常在用戶的瀏覽器上執行。 Node.js的出現使JavaScript也能用於伺服器端編程。Node.js含有一系列內置模組，使得程式可以脫離Apache HTTP Server或IIS，作為獨立伺服器執行。什麼是Git？什麼是GithubGit 是一個分散式版本控制軟體，最初由 Linus Torvalds 創作（也是作業系統 Linux 系統的開發者），其最初目的是為更好地管理 Linux kernel 開發而設計，其具備優秀的 merge tracing 合併程式碼的能力（使用程式碼 snapshot 來比較歷史版本差異）。Github 則是一個支援 git 程式碼存取和遠端托管的平台服務，有許多的開放原始碼的專案都是使用 Github 進行程式碼的管理。若是讀者未來有志於從事程式設計相關工作的話，建議可以熟悉掌握 Git 和 Github 的使用，並建立自己的 Github profile 作品集。若對Git使用上有任何問題，可以參考這個網站：連猴子都能懂的Git入門指南安裝Git與Node.jsGitMac使用 Homebrew，MacPorts 或下載 安裝程序 安裝Linux（Ubuntu，Debian)1sudo apt-get install git-coreLinux（Fedora，Red Hat，CentOS)1sudo yum install git-coreWindows到Git官網下載合適版本：下載鏈接下載好之後會有Git Bash、Git CMD、Git GUI，我們需要利用Git Bash來操作GIT。下載成功之後打開Git Bash，輸入git --version回車，若版本正確則代表安裝成功。Node.js接著安裝Node.js。Hexo基於Node.js，所以需要安裝Node.js及npm。有兩種辦法：(新手建議直接下載安裝)使用nvm安裝 (安裝NVM來安裝node.js)直接下載安裝：下載鏈接（選擇LTS下載適合版本即可）若安裝完之後，在Git Bash輸入：12node -vnpm -v確認版本正確則代表安裝成功。安裝HEXO若上述必備軟體都已經成功安裝，那你就可以打開Git Bash輸入下方指令，透過npm即可完成HEXO的安裝。1npm install hexo-cli -g然後檢查是否安裝成功1hexo -v若無出現錯誤代表安裝成功。若你在這一步出現bash: hexo command not found，很有可能是你的npm\node_modules\hexo-cli\bin並未加入環境變量，可以參考這篇文章。建置部落格在電腦隨便一個地方新建一個資料夾作為部落格的目錄，我將資料夾命名為blog（請將blog改成你的資料夾名），然後執行下方指令。1hexo init blog若出現INFO Start blogging with Hexo!代表成功。接著輸入 cd blog 進入blog內，然後輸入npm install。建立完成後會出現以下檔案：.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes_config.yml網站配置檔案，您可以在此配置大部分的設定。package.json應用程式資料。EJS, Stylus 和 Markdown renderer 已預設安裝，您可以稍後移除。scaffolds存新文章及新頁面的初始設置。source存文章、頁面、圖片…等檔案。 資料夾名稱開頭為 _ (底線) 和隱藏檔案會被忽略，除了 _posts 資料夾以外。 Markdown 和 HTML 檔案會被處理並放到 public 資料夾，而其他檔案會被拷貝過去。themes主題資料夾。Hexo 會根據主題來產生靜態檔案。之後才會出現的目錄：node_modulesnode.js 各種庫的目錄。public生成靜態文件目錄。本地測試Git Bash輸入下方命令：12hexo -ghexo server若出現INFO Hexo is running at http://localhost:4000 …，打開瀏覽器輸入http://localhost:4000 即可看到生成的部落格頁面。Ctrl+C可關閉本地服務。將Hexo部署到Github你首先需要註冊Github帳號，並且登入新建一個repository，命名格式：用戶名.github.io(若是不會註冊，請參考這篇文章。)例如我的用戶名為ZENreal，我的repository name就應該輸入 ZENreal.github.io，若不按照這個格式命名，之後部署到Github pages時就無法識別。(而這個repository name就是訪問你部落格的鏈結)配置SSH打開Git Bash輸入：12git config --global user.name "Github 用戶名"git config --global user.email "Github Email"成功後會生成本地密鑰，請輸入以下命令檢查是否正確。12git config user.namegit config user.email確認無誤之後輸入：1ssh-keygen -t rsa -C "Github Email"創建SSH。當出現 Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa): 時請按Enter。Enter passphrase (empty for no passphrase):(輸入加密串) Enter same passphrase again:(再次輸入加密串)這個密碼會在你提交項目時使用，如果為空提交項目時則不用輸入。這是防止別人往你的項目裡提交內容。接著你可以在你的user資料夾內找到.ssh這個資料夾，裡頭會有id_rsa、id_rsa.pub。id_rsa是你電腦的私人密鑰，id_rsa.pub是公共密鑰。你需要把公共密鑰放到Github使得公鑰能夠匹配私鑰，才能通過Git將你的檔案上傳到Github。使用文字檔打開id_rsa.pub，將裡頭內容複製，貼到 Github(右上角頭像旁倒三角形) -&gt; Settings -&gt; SSH and GPG keys -&gt;New SSH key -&gt; Key中。你有可能會遇到的問題：Connecting to GitHub with SSHError: Permission denied (publickey)部署到Github打開部落格目錄，找到配置檔案_config.yml(使用sublime打開)，拉到最底下 deploy片段，按照以下格式修改：1234deploy: type: git repository: git@github.com:你的github用戶名/你的github用戶名.github.io.git branch: master注意：冒號必須使用英文半形，且冒號後方都必須空一格。type,repository,branch前方必須空兩格英文半形。若你不知道repository: 該如何填寫，到你的repository 右下方Clone -&gt; Use SSH 複製框裡頭的內容貼上即可。在部落格目錄下打開Git Bash，輸入下方命令開始安裝deploy-git。1npm install hexo-deployer-git --save然後執行:1hexo generate執行1hexo deploy若出現INFO Deploy done: git則代表部署成功，接著你就可以打開瀏覽器輸入 http://yourname.github.io 瀏覽你的部落格。安裝部落格主題(Themes)hexo官方提供了多種主題免費使用，你可以到Themes|Hexo下載喜歡的主題。下載好之後，打開你的部落格目錄，將剛剛下載好的主題解壓縮放進\themes裡。打開_config.yml，找到12#Extensionstheme: landscape將theme後面改成你的主題名稱然後存檔。打開Git Bash，輸入：123hexo clean #每次換主題都要cleanhexo generate #也可以直接打hexo ghexo deploy #也可以直接打hexo d如此一來主題就更換完成了。你也可以透過 git clone 主題地址 存放位置來安裝主題，請在安裝前先閱讀該主題的README.md文件。修改主題配置：修改themes/主題名稱/_config.yml打開RSS執行如下命令：1npm install hexo-generator-feed --save在./_config.yml中添加:1234feed: type: atom path: atom.xml limit: 20常用指令hexo generate (hexo g) #生成靜態文件，會在當前目錄下生成一個public資料夾hexo server(hexo s) #啟用本地WEB服務，用於預覽 (http://localhost:4000)hexo deploy(hexo d) #部署BLOG到遠端（比如github）hexo new postName #新建文章hexo new page pageName #新建頁面hexo --debug #檢查BUGnpm uninstall 插件名稱 #卸載插件生成文章後會存在 部落格資料夾\source\_posts 目錄底下，默認格式是.md檔，md就是指markdown語法，這邊建議使用Sublime來寫文章。注意事項推薦使用Sublime Text來修改配置檔案！！！你才能確認格式沒有錯誤！！！如果格式錯誤，例如冒號是全形、冒號後方沒有空格、空格是全形…等，是不會變色的，你就知道你有輸入錯誤了。使用Sublime Text修改部落格配置：language: 網站使用的語言，可以參考 2-lettter ISO-639-1 code，預設為 en。 (建議設成zh-TW)timezone: 網站時區，Hexo 預設使用您電腦的時區，您可以在 時區列表 尋找適當的時區。url: 網站的網址root: 網站的根目錄permalink: 文章 永久連結 的格式 :year/:month/:day/:title/ (不滿意這個格式可以下載hexo-abbrlink插件)你可能在使用Hexo途中遇到問題，請參考Hexo官方文件。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>git</tag>
        <tag>node.js</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
</search>
