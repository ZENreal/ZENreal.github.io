<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo NexT主題 主題優化]]></title>
    <url>%2Fposts%2F44730%2F</url>
    <content type="text"><![CDATA[主題改為NexT之後發現能玩的功能實在太多了，要修改的地方也很多，本來以為使用最多人用的NexT主題可以少走很多彎路，但是才發現前不久NexT才做了重大更新，因此網上的一些教程也都失效了，為此決定寫這篇文章來記錄我個人的NexT主題優化歷程，順便分享給大家最新版本的修改方式。寫在前頭 2019/08/07 NexT主題更新到v7.2.0+這一版之後的主題簡化自定義內容的添加方法，刪除了以前版本所用的custom.styl自定義css樣式文件新版的使用方法，主題配置文件中：12345678910111213# Define custom file paths.# Create your custom files in site directory `source/_data` and uncomment needed files below.custom_file_path: #head: source/_data/head.swig #header: source/_data/header.swig #sidebar: source/_data/sidebar.swig #postMeta: source/_data/post-meta.swig #postBodyEnd: source/_data/post-body-end.swig #footer: source/_data/footer.swig #bodyEnd: source/_data/body-end.swig #variable: source/_data/variables.styl #mixin: source/_data/mixins.styl #style: source/_data/styles.styl將1#style: source/_data/styles.styl注釋刪除(就是刪除前方#)，然後在 BLOG根目錄/source/_data/裡新增文件styles.styl，在該文件中添加自定義內容。同樣，如果需要在head中添加內容，比如修改字體時引入 Google Fonts 以及分析博客數據時引入 Google Analytics，則需要新建 head.swig文件，在其中添加自定義內容即可。在post.swig中添加的文章結尾樣式，可以直接添加在post-body-end.swig文件中。主題自帶功能文本居中引用文本居中引用效果123{% cq %}文本居中引用效果{% endcq %}NOTE有HTML方式或是直接使用標籤default1&lt;div class="note default"&gt;&lt;p&gt;default html&lt;/p&gt;&lt;/div&gt;Content (md partial supported)1{% note class_name %} Content (md partial supported) {% endnote %}其中，class_name 可以是以下列表中的一個值：defaultprimarysuccessinfowarningdanger在主題配置文件中可修改note樣式。12345678910111213# Note tag (bs-callout)note: # Note tag style values: # - simple bs-callout old alert style. Default. # - modern bs-callout new (v2-v3) alert style. # - flat flat callout style with background, like on Mozilla or StackOverflow. # - disabled disable all CSS styles import of note tag. style: simple icons: true border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0TABS標籤頁在主題配置文件將tabs改成true。123456# Tabs tagtabs: transition: tabs: true labels: true border_radius: 0標題 1標題 2標題 3標籤頁 1標籤頁 2標籤頁 31234567891011{% tabs 標籤頁, 1 %}&lt;!-- tab 標題 1 --&gt;**標籤頁 1**&lt;!-- endtab --&gt;&lt;!-- tab 標題 2 --&gt;**標籤頁 2**&lt;!-- endtab --&gt;&lt;!-- tab 標題 3 --&gt;**標籤頁 3**&lt;!-- endtab --&gt;{% endtabs %}標籤頁後面的，1 代表預設開啟的標籤頁數，若改成-1代表隱藏。BUTTON標籤點擊下載1{% btn https://zenreal.github.io, 點擊下載, fas fa-download %}後方是font awesome的class id 。設置RSSNexT 中 RSS 有三個設置選項，滿足特定的使用場景。更改主題配置文件，設定 rss 字段的值：false：禁用 RSS，不在頁面上顯示 RSS 連接。留空：使用 Hexo 生成的 Feed 鏈接。你需要先安裝 hexo-generator-feed 插件。安裝方式：在BLOG根目錄Git Bash1npm install hexo-generator-feed --save在站點配置文件中加入1234567891011feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' order_by: -date icon: icon.png autodiscovery: true具體的鏈接地址：適用於已經燒製過 Feed 的情形。修改favicon將favicon放到source底下，主題配置文件找到favicon處直接改成：123456favicon: small: favicon.ico medium: favicon.ico . . .在線生成favicon.ico打開搜索功能主題配置文件找到local search處，把enable改成true。12345678910111213# Local Search# Dependencies: https://github.com/wzpan/hexo-generator-searchlocal_search: enable: true # If auto, trigger search by changing input. # If manual, trigger search by pressing enter key or search button. trigger: auto # Show top n results per article, show all results by setting to -1 top_n_per_article: 1 # Unescape html strings to the readable one. unescape: false # Preload the search data when the page loads. preload: true此功能需要安裝hexo-generator-search和hexo-generator-searchdb12npm i hexo-generator-searchnpm install hexo-generator-searchdb --save站点配置文件中加入：123456# Search search: path: search.xml field: post format: html limit: 10000將標籤的# 改成圖案主題配置文件找到tag_icon改成true即可。12# Use icon instead of the symbol # to indicate the tag at the bottom of the posttag_icon: trueCOPYRIGHT主題配置文件找到copyright改成true即可。12# If not defined, `author` from Hexo `_config.yml` will be used. copyright: true將網頁下方版權隱藏主題配置文件找到以下，將想隱藏的版權enable改成false即可。1234567891011powered: # Hexo link (Powered by Hexo). enable: false # Version info of Hexo after Hexo link (vX.X.X). version: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false自定義樣式自定義NOTE風格在source\_data\styles.styl加入：123456789101112131415161718192021222324252627//自定義NOTE風格.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent; border-radius: 4px;}.alert-success { color: #468847; background-color: #dff0d8; border-color: #d6e9c6;}.alert-info { color: #3a87ad; background-color: #e2eaee; border-color: #c5d5dd;}.alert-warning { color: #c09853; background-color: #fcf8e3; border-color: #faebcc;}.alert-danger { color: #b94a48; background-color: #f2dede; border-color: #ebccd1;}效果 success info warning danger你可以自行修改圖標，只需要將i class後面修改成你想替換的圖標id即可。自定義文字背景色塊在source\_data\styles.styl加入：12345678910111213141516171819202122232425//自定義文字背景色塊span#inline-blue, span#inline-green, span#inline-purple, span#inline-yellow { display: inline; padding: .2em .6em .3em; font-size: 90%; font-weight: 700; line-height: 1; color: #fff; text-align: center; vertical-align: baseline; border-radius: 0; white-space: nowrap;}span#inline-blue { background-color: #2780e3;}span#inline-purple { background-color: #9954bb;}span#inline-yellow { background-color: #f0ad4e;}span#inline-green { background-color: #5cb85c;}站点配置文件1&lt;span id="inline-blue"&gt;站点配置文件&lt;/span&gt;還有紫色(purple)黃色(yellow)綠色(green)可替換，你也可以自行新增顏色。側欄圓角化打開.\themes\next\source\css\_variables\Pisces.styl找到$border-radius 將initial改成16px1234567// Borders// --------------------------------------------------$box-shadow-inner = initial;$box-shadow = initial;$border-radius-inner = initial;$border-radius = 16px;打開.\themes\next\source\css\_schemes\Pisces\_layout.styl將.header-inner 以及.content-wrap 下方的1border-radius: $border-radius-inner;都改成1border-radius: $border-radius;如123456789.header-inner { background: white; border-radius: $border-radius; box-shadow: $box-shadow-inner; overflow: hidden; padding: 0; position: absolute; top: 0; width: $sidebar-desktop;以及123456789.content-wrap { background: white; border-radius: $border-radius; box-shadow: $box-shadow-inner; box-sizing: border-box; float: right; min-height: 700px; padding: $content-desktop-padding; width: $content-wrap;效果參考本站鏈接顏色更改在 .\themes\next\source\css\_common\components\post\post.styl 最下方加上1234567891011// 文章内鏈接文本樣式.post-body p a{ color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover { color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; }}第一個color指的是鏈接顯示的顏色，第二個color是移上去顯示的顏色。效果參考本站插入音樂與影片請參考Hexo 搭建系列 - 插入音樂與影片Disqus回覆請參考Hexo 搭建系列 - 為HEXO安裝Disqus評論功能注腳安裝hexo-footnotes插件1npm install hexo-footnotes --save請參考hexo-footnotes點頭像回到首頁打開 .\themes\next\layout\_partials\sidebar\site-overview.swig找到1{%- if theme.avatar.url %}下方加上1&lt;a href="/"&gt;如123456{%- if theme.avatar.url %} &lt;a href="/"&gt; &lt;img class="site-author-image" itemprop="image" src="{{ url_for( theme.avatar.url | default(theme.images + '/avatar.gif') ) }}" alt="{{ author }}"&gt; {%- endif %}還有很多功能我沒用到我就沒介紹…可以自行摸索。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安裝Hexo Next主題網頁顯示空白]]></title>
    <url>%2Fposts%2F51517%2F</url>
    <content type="text"><![CDATA[前言終於還是從Butterfly轉成Next主題了，每次爬文發現大家都使用next主題做教程，有些檔案在我的主題裡名稱不一樣甚至格式也不一樣導致code寫法不同，找尋這些花了不少時間，最終決定也合流使用next主題了(畢竟懶…)。但是在我安裝next主題之後打開網頁卻是空白的，搞了半天發現是motion設置的問題，修改成false之後就可以正常開啟了。問題安裝/換成 next 主題"有可能"遇到以下問題：motion未設置成falseGitHub Pages 禁止了 source/vendors 目錄訪問theme設置處缺少空白或格式錯誤沒有hexo clean解決方式motion設置我猜測可能是頁面動畫導致網頁顯示空白，因此我將它設置成false就能正常顯示了。GitHub Pages 禁止了 source/vendors 目錄訪問我倒是沒遇到這個問題，有這個問題的可以參考：Hexo next 主题显示全白是什么原因？请问hexo next主题deploy到GitHub后不显示内容只显示框架这个问题怎么解决？網站配置文件中theme格式錯誤注意格式必須為以下：1theme: nexttheme:後方必需要有一個半形空格，且theme前方不能有別的東西。安裝主題後沒有hexo clean1hexo cleanhexo clean用來清除快取檔案 (db.json) 和已產生的靜態檔案 (public)。每次安裝完主題記得要clean。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 在BLOG中插入Emoji表情]]></title>
    <url>%2Fposts%2F25926%2F</url>
    <content type="text"><![CDATA[🍑 🍇 🍐 🍓 🍌 🍉 🍍 🍋 🍎HEXO預設的markdown渲染器是hexo-renderer-marked，這個渲染器並不支援插件擴展，所以我們需要卸載它改裝hexo-renderer-markdown-it 。而hexo-renderer-markdown-it 原裝包含了以下插件：- markdown-it-abbr- markdown-it-footnote- markdown-it-ins- markdown-it-sub- markdown-it-sup並不包含emoji插件，因此我們還要安裝markdown-it-emoji來插入表情。安裝STEP 1首先卸載hexo-renderer-marked然後再安裝hexo-renderer-markdown-it。12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-markdown-it --saveSTEP 2安裝markdown-it-emoji：1npm install markdown-it-emoji --saveSTEP 3打開 config.yml 加入以下內容：123456789101112131415161718192021markdown: render: html: true xhtmlOut: false breaks: true linkify: true typographer: true quotes: '“”‘’' plugins: - markdown-it-abbr - markdown-it-footnote - markdown-it-ins - markdown-it-sub - markdown-it-sup - markdown-it-emoji anchors: level: 2 collisionSuffix: 'v' permalink: true permalinkClass: header-anchor permalinkSymbol: ''STEP 4使用方法：在 emoji-cheat-sheet 中查找想貼上的表情，例如 💥則直接在文章中對應編碼 :boom: 就能顯示。參考資料hexo-renderer-markdown-it document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - SEO優化篇]]></title>
    <url>%2Fposts%2F7993%2F</url>
    <content type="text"><![CDATA[首先嘗試在google搜索 site:你的域名，來確認你的BLOG有沒有被收錄，能搜索到代表有被收錄，若無則沒有。一般優化文章鏈接優化請參考：Hexo 搭建系列 - Hexo-Abbrlink插件 永久鏈接增加 nofollow標籤這是反垃圾鏈接標籤，用於指示搜尋引擎不要抓取網頁上帶有nofollow標籤的任何出站鏈接，減少垃圾鏈接分散網站權重。你可以使用 hexo-filter-nofollow 插件。添加robots.txt在./source新建robots.txt 填寫以下內容：123456789101112User-agent: *Allow: /Allow: /archives/Allow: /categories/Allow: /tags/ Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: http://你的網域/sitemap.xmlUser-agent: * 表示運行所有的搜尋引擎，你也可以設定只允許特定的搜尋引擎爬取，例如User-agent: GooglebotAllow表示允許被訪問的，Disallow是不允許的意思。Disallow不添加任何路徑就表示運行爬取任何內容。(若要Disallow多個資料夾或檔案,需要分成多行來寫,一行只能寫一個)關鍵詞與描述在\scaffolds\post.md中添加如下代碼，用於生成的文章中添加關鍵字和描述。12keywords:description:Sitemap什麼是 Sitemap？「Sitemap」是一種檔案，您可以在其中提供網站中網頁、影片和其他檔案的相關資訊，並說明各種網頁和檔案之間的關係。Google 這類搜尋引擎會讀取 Sitemap 檔案，以更靈活的方式檢索您的網站。Sitemap 會向檢索器顯示您認為網站上的哪些檔案較為重要，並針對這類檔案提供有價值的資訊：舉例來說，Sitemap 會針對網頁提供最近更新時間、變更頻率以及替代語言版本等相關資訊。您可以透過下列幾種方式讓 Google 存取您的 Sitemap：使用 Search Console Sitemap 工具向 Google 提交 Sitemap在 robots.txt 檔案中任一處插入以下這一行字元，指定 Sitemap 的路徑。1Sitemap: http://example.com/sitemap.xml透過「連線偵測 (ping)」功能要求 Google 檢索您的 Sitemap。請按照下列方式傳送 HTTP GET 要求：1http://www.google.com/ping?sitemap=&lt;complete_url_of_sitemap&gt;例如：1http://www.google.com/ping?sitemap=https://example.com/sitemap.xmlSTEP 1安裝hexo-sitemap-generator外掛可以自動幫你的BLOG產生Sitemap.xml，你只需要打開BLOG根目錄Git Bash輸入以下指令：1npm install hexo-generator-sitemap --save安裝完後瀏覽你的BLOG/sitemap.xml，就會發現已經生成了。可以把sitemap提交到GSC來增加收錄。STEP 2設定config.yml。12sitemap: path: sitemap.xmlSTEP 3註冊Google Search Console https://search.google.com/search-console/about?hl=zh-tw使用google帳號登陸即可。貼上BLOG網址點擊「繼續」，因為我已經加入Google Analytics到我的BLOG，所以我可以通過Google Analytics帳號來驗證。你也可以在 [設定 - 擁有權驗證 - 其他驗證方法] 使用其他方法驗證。STEP 4到 [Google Search Console後台 - Sitemap - 新增Sitemap] 填寫sitemap.xml。等待幾天就能夠在google上搜尋到自己的網站了。Google無法讀取sitemap(一般的HTTP錯誤) 解決方式我剛開始提交sitemap的時候試了無數次發現總是出現無法讀取 Sitemap ,一般的 HTTP 錯誤這個錯誤，為此我在google上查找了許久都沒有找到解決方式，於是我開始閱讀 google的sitemap說明，在Sitemap 格式處發現了問題所在。若你跟我有一樣的問題，你可以打開 你的網址/sitemap.xml 查看你的時間格式是否為 &lt;lastmod&gt;2019-09-29T09:52:32Z&lt;/lastmod&gt;你能發現跟官方的&lt;lastmod&gt;2018-06-04&lt;/lastmod&gt; 差在多了後面多了T時分秒Z…等一些沒必要的格式，我猜這就是問題所在，於是google搜尋了解決辦法，參考Convert an ISO date to the date format yyyy-mm-dd in JavaScript找到了解決辦法。以下是解決方式：打開 .\node_modules\hexo-generator-sitemap\sitemap.xml 在1post.updated.toISOString()後方加上1.substring(0, 10)substring(Start,End) 意思是擷取從0開始到9位數(End位數不會擷取)，本來是2019-09-29T09:52:32Z，就只會擷取到2019-09-29，這樣就是官方所要求的格式。重新提交sitemap之後等待一會就會顯示成功了。參考資料hexo-generator-sitemapHexo 优化：提交 sitemap 及解决百度爬虫无法抓取 GitHub Pages 链接问题Hexo做SEO优化遇到的坑Hexo Seo优化让你的博客在google搜索排名第一管理您的 Sitemap,建立並提交 SitemapConvert an ISO date to the date format yyyy-mm-dd in JavaScript document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 為HEXO安裝Disqus評論功能]]></title>
    <url>%2Fposts%2F38797%2F</url>
    <content type="text"><![CDATA[註冊與安裝STEP 1到Disqus官網選擇GET STARTED 然後註冊一個帳號(在此省略註冊過程)。STEP 2登入Diqcus之後選擇[I want to install Disqus on my site]。STEP 3填入網站資料(沒重複的話，Website name就是你的shortname)。STEP 4到Admin - Settings - General - shortname，確認一下你的shortname。注意：若你的Websit Name重複，shortname則將與Websit Name不同，請務必注意。STEP 5打開config.yml加入以下內容：大於5.1.1版本：12345#Disqusdisqus: enable: true #開啟功能 shortname: 你的shortname count: true #在文章中顯示評論數量小於5.1.1版本 則設定shortname值即可：12#Disqusdisqus_shortname: 你的shortname大部分HEXO主題都可以設定是否開啟disqus功能(如Net,Butterfly…等)，打開主題的配置文件搜索disqus試試吧。效果演示：Reactions功能Admin - Settings - Reactions - Enable Reactions on your site.若想要關閉Reactions功能則點擊下方[Turn reactions off]即可。Reactions功能效果： document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[線上快速將Twitter影片轉成GIF檔]]></title>
    <url>%2Fposts%2F19600%2F</url>
    <content type="text"><![CDATA[EZGIF網址：https://ezgif.com/video-to-gif使用方法格式：MP4, WebM, AVI, MPEG, FLV, MOV, 3GP and other video files | 大小限制：100MBSTEP 1在Twitter上找到想轉換成GIF的影片，在影片上點擊右鍵－複製影片地址STEP 2貼到Video to GIF converter 點擊upload video即可。EZGIF提供了簡單的功能，例如畫面裁剪、影片裁剪、旋轉、縮放、修改速度、加字、自行選擇FPS和大小…等。轉換後直接在GIF上點擊右鍵儲存圖片。範例 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>線上工具</category>
      </categories>
      <tags>
        <tag>Twitter</tag>
        <tag>GIF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手動安裝Google Chrome 擴充功能]]></title>
    <url>%2Fposts%2F58580%2F</url>
    <content type="text"><![CDATA[此方法適用於 開發者已下架或是遭官方下架無法從擴充商店安裝的擴充功能，但你能在其他地方找到.CRX檔或資料夾。 教程以 Listen 1作為範例。STEP 1打開Chrome瀏覽器的擴充功能頁面 ( 或者在網址輸入 chrome://extensions/)。STEP 2在右上角打開[開發人員模式] 左邊選擇[載入未封裝項目]。STEP 3選擇擴充功能資料夾。STEP 4開啟擴充功能即可在瀏覽器右上方看見，並且使用。若擴充功能非資料夾而是.CRX檔，請使用7-ZIP解壓縮放進資料夾後按以上步驟載入。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 利用HEXO-ADMIN插件後台管理BLOG]]></title>
    <url>%2Fposts%2F19908%2F</url>
    <content type="text"><![CDATA[安裝在BLOG根目錄使用GIT BASH 輸入下方指令安裝HEXO-ADMIN，並開啟本地測試。123npm install --save hexo-adminhexo server -dopen http://localhost:4000/admin/安裝成功後打開瀏覽器輸入就能看見後台。但這樣還不算完成，我們還需要在BLOG根目錄新建檔案hexo-generate.bat，寫入hexo g -d。然後打開config.yml，新增：12admin: deployCommand: 'hexo-generate.bat'若不添加則會出現Error: Config value "admin.deployCommand" not found或者Error: spawn hexo ENOENT之類的報錯。你還可以在設定後台帳號和密碼。Settings - Setup authentification here.輸入帳號密碼，下方Admin Config Section會自動產生相對應的code，你只需要複製貼上到剛剛config.yml的admin處即可。部署方式後台 - Deploy - 直接點擊Deploy鍵，若無出現錯誤就是部署成功了。參考資料jaredly/hexo-admin document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 使用hexo-tag-color-block插件在文章中插入色碼方塊]]></title>
    <url>%2Fposts%2F25045%2F</url>
    <content type="text"><![CDATA[安裝方式在blog根目錄右鍵-&gt;Git Bash 輸入指令：1npm i hexo-tag-color-block使用方式直接在文章中加入語法：1{% colorblock [color hex code] [width] [height] %}色碼表DEMO：&nbsp;#E6E6FA配置預設寬高在config.yml中加入：12345code_block: width: height: # whether you want to show hex code text:Default:1234code_block: width: 10 height: 10 text: true參考資料hexo-tag-color-block document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - hexo-abbrlink插件 永久鏈接]]></title>
    <url>%2Fposts%2F2470%2F</url>
    <content type="text"><![CDATA[前言打開_config.yml 可以看到預設的永久鏈接是依照日期來產生的。1permalink: :year/:month/:day/:title/假設hello world.md原路徑為/source/_posts/hello world.md按照預設的鏈接來生成靜態文件後路徑會變成/public/2019/09/23/hello world/index.html但是這樣的缺點是 鏈接太長，所以在這邊推薦一個插件abbrlink來調整，abbrlink的概念是對標題+時間進行md5然後再轉base64，保存在front-matter中。安裝在blog根目錄下git bash 輸入指令 npm install hexo-abbrlink --save 安裝abbrlink接著在_config.yml 的permalink後面改成如下格式：1permalink: posts/:abbrlink/接著在下方隨機處加上：123abbrlink: alg: crc32 #support crc16(default) and crc32 ,crc16的最大帖子數是65535。 rep: hex #support dec(default) and hex有兩種設置：alg(算法)：crc16(默認)或crc32rep(表示)：dec(默認，十進制)或hex(十六進制)以下是各種搭配的效果範例crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html只要打開文章.md就能在配置區看到自動產生的 abbrlink: 編號 啦！更多信息參考資料hexo-abbrlinkhexo指南 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>abbrlink</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 插入音樂與影片]]></title>
    <url>%2Fposts%2F61856%2F</url>
    <content type="text"><![CDATA[推薦網站youtaker揚天音樂音樂直鏈搜索插入音樂有幾種方法可以插入音樂：HTML標籤MeingJS方式hexo-tag-aplayer插件HTML1)直接使用標籤寫1&lt;audio src="mp3網址" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta"&gt;Your browser does not support the audio tag.&lt;/audio&gt;Your browser does not support the audio tag.2)iframe直接複製音樂平台提供的外鏈方式(以網易雲為例)：單首12345&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=網易雲歌曲id&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt; 歌單1&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=450 src="//music.163.com/outchain/player?type=0&amp;id=網易雲歌單id&amp;auto=1&amp;height=430"&gt;&lt;/iframe&gt; HEXO內置iframe標籤1{% iframe url [width] [height] %}3)Embed直接複製音樂平台提供的外鏈方式1&lt;embed src="http://www.youtaker.com/video2015/v2007/swf/m.swf" width="336" height="100" bgcolor="#FFFFFF" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="file=http://www.youtaker.com/video/v/nu/4b8604f40a6547538970fde857f2c50f85.xml&amp;linkfromdisplay=false&amp;showdigits=true&amp;autostart=true&amp;repeat=true&amp;showfsbutton=false&amp;showeq=true" /&gt;MeingJS文章開頭添加(或修改主題)123&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"&gt;&lt;script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"&gt;&lt;/script&gt;在文章插入1&lt;div class="aplayer" data-id="歌曲id" data-server="netease" data-type="song" data-mode="single"&gt;&lt;/div&gt;標籤參數title : 曲目標題author: 曲目作者url: 音樂文件 URL 地址picture_url: (可選) 音樂對應的圖片地址narrow: （可選）播放器袖珍風格autoplay: (可選) 自動播放，移動端瀏覽器暫時不支持此功能width:xxx: (可選) 播放器寬度 (默認: 100%)lrc:xxx: （可選）歌詞文件 URL 地址效果：hexo-tag-aplayer插件進入blog目錄，打開git bash輸入npm install hexo-tag-aplayer --save安裝Aplayer插件。文章內輸入語法即可。 單首1{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %}標籤參數title : 曲目標題author: 曲目作者url: 音樂文件 URL 地址picture_url: (可選) 音樂對應的圖片地址narrow: （可選）播放器袖珍風格autoplay: (可選) 自動播放，移動端瀏覽器暫時不支持此功能width:xxx: (可選) 播放器寬度 (默認: 100%)info@lrc:xxx: （可選）歌詞文件 URL 地址 歌單123456789101112131415161718192021222324252627{% aplayerlist %}{ "narrow": false, // （可選）播放器袖珍風格 "autoplay": true, // （可選) 自動播放，移動端瀏覽器暫時不支持此功能 "mode": "random", // （可選）曲目循環類型，有'random'（隨機播放）, 'single' (單曲播放), 'circulation' (循環播放), 'order' (列表播放)， 默認：'circulation' "showlrc": 3, // （可選）歌詞顯示配置項，可選項有：1,2,3 "mutex": true, // （可選）該選項開啟時，如果同頁面有其他 aplayer 播放，該播放器會暫停 "theme": "#e6d0b2", | // （可選）播放器風格色彩設置，默認：#b7daff "preload": "metadata", // （可選）音樂文件預載入模式，可選項： 'none' 'metadata' 'auto', 默認: 'auto' "listmaxheight": "513px", // (可選) 該播放列表的最大長度 "music": [ { "title": "歌名", "author": "歌手", "url": "歌曲網址", "pic": "專輯圖", "lrc": "歌詞檔" }, { "title": "歌名", "author": "歌手", "url": "歌曲網址", "pic": "專輯圖" } ]}{% endaplayerlist %} 歌詞123{% aplayerlrc "title" "author" "url" "autoplay" %}[00:00.00]lrc here{% endaplayerlrc %} 吸底模式12345678910const ap = new APlayer({ container: document.getElementById('player'), fixed: true, audio: [{ name: 'name', artist: 'artist', url: 'url.mp3', cover: 'cover.jpg', }]}); 迷你模式12345678910const ap = new APlayer({ container: document.getElementById('player'), mini: true, audio: [{ name: 'name', artist: 'artist', url: 'url.mp3', cover: 'cover.jpg', }]});但這樣一首一首加非常麻煩啊！MeingJS 支持 (3.0 新功能)MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。在 config.yml 加上：12aplayer: meting: true就可以更便利的插入音樂平台的歌曲了。 單首歌或歌單1{% meting "歌曲id/歌單id" "音樂平台" "song(playlist)" "mutex:false" "listmaxheight:340px" "preload:none" "theme:#ad7a86"%}效果參數預設值id必要歌曲 id / 歌單 id / album id / search keywordserver必要音樂平台:netease(網易雲),tencent,kugou,xiami,baidutype必要song(單首),playlist(歌單),album,search,artistfixedfalse吸底模式minifalse迷你模式(只有一張專輯圖大小)loopall循環播放,值:‘all’(一直), ‘one’(一次), ‘none’(從不)orderlist值: ‘list’, ‘random’volume0.7預設音量mutextrue互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器listfoldedfalse音樂播放列表是否摺疊autoplaytrue自動播放歌曲(不適用於手機)theme#ad7a86播放器色彩設置PJAX 兼容若在 Hexo 中使用了 PJAX，可能需要自己手動清理 APlayer 全局實例：12345678$(document).on('pjax:start', function () { if (window.aplayers) { for (let i = 0; i &lt; window.aplayers.length; i++) { window.aplayers[i].destroy(); } window.aplayers = []; }});自定義配置（3.0 新功能）現在你可以在 Hexo 配置文件 config.yml 中配置本插件：12345678910aplayer: script_dir: some/place # Public 目錄下腳本目錄路徑，默認: 'assets/js' style_dir: some/place # Public 目錄下樣式目錄路徑，默認: 'assets/css' cdn: http://xxx/aplayer.min.js # 引用 APlayer.js 外部 CDN 地址 (默認不開啟) style_cdn: http://xxx/aplayer.min.css # 引用 APlayer.css 外部 CDN 地址 (默認不開啟) meting: true # MetingJS 支持 meting_api: http://xxx/api.php # 自定義 Meting API 地址 meting_cdn: http://xxx/Meing.min.js # 引用 Meting.js 外部 CDN 地址 (默認不開啟) asset_inject: true # 自動插入 Aplayer.js 與 Meting.js 資源腳本, 默認開啟 externalLink: http://xxx/aplayer.min.js # 老版本參數，功能與參數 cdn 相同其他問題解決方式參考官方README.MD插入影片與音樂大同小異，會插入音樂就會插入影片了。1)HTML標籤1&lt;video poster="https://封面.jpg" src="https://影片網址.mp4" style="max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta"&gt;Your browser does not support the video tag.&lt;/video&gt;2)使用hexo-the-dplayer插件在blog根目錄 Git Bash npm install hexo-tag-dplayer --save 來安裝Dplayer插件在blog中寫法1{% dplayer "url=https://影片網址.mp4" "https://封面.jpg" "api=https://api.prprpr.me/dplayer/" "id=自己取" "loop=false" %}可直接使用官網api參考資料markdown插入音乐hexo-tag-aplayerhexo 插入音乐与视频从零开始建立个人博客V：插入音视频 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建系列 - 基礎寫作流程篇]]></title>
    <url>%2Fposts%2F51388%2F</url>
    <content type="text"><![CDATA[前言Hexo系統寫作透過Markdown語法來寫作，若是對Markdown不熟悉，可以參考這個網站。Markdown寫作環境以下推薦免費並且親測可用的Markdown軟體以及在線編輯器。Markdown編輯軟體MarkdownPad (for Windows 適合新手) - https://markdownpad.com/BookPad - https://sosfos.wordpress.com/Boost Note - https://boostnote.io/Bear (iPhone, iPad, and Mac適合新手) - https://bear.app/Typora - https://typora.io/Zettlr - https://www.zettlr.com/SimpleMDE - https://simplemde.com/Sublime Text 3 - https://www.sublimetext.com/Atom - https://atom.io/Smark - https://gitee.com/elerao/SmarkMou(OS X 10.7 to 10.11 適合新手) - http://25.io/mou/Miu - https://github.com/egoist/MiuCommonMark - https://commonmark.org/Ghostwriter(for Windows and Linux) - https://wereturtle.github.io/ghostwriter/Notable - https://github.com/notable/notable在線Markdown編輯器MEditor.md(適合新手) - https://pandao.github.io/editor.md/en.htmlStack Edit (適合新手) - https://stackedit.io/DILLINGER (推薦老手使用) - https://dillinger.io/Markdown Live Preview (推薦老手使用) - https://markdownlivepreview.com/寫作流程創建文章：1hexo new [layout] &lt;title&gt;編輯文章：通過Markdown編輯器修改。發布文章：將文章發布到你的blog上。創建文章通過Git Bash輸入指令1hexo new [layout] &lt;title&gt;創建文章。您可以在指令中指定文章的佈局（layout），預設為 post，您可以透過修改_config.yml 中的 default_layout 設定來指定預設佈局。佈局（Layout）Hexo 有三種預設佈局：post、page 和 draft，它們分別對應不同的路徑，而您所自定的其他佈局和 post 相同，都儲存至 source/_posts 資料夾。佈局 路徑post(發表) source/_postspage(頁面) sourcedraft(草稿) source/_drafts檔案名稱Hexo 預設以標題做為檔案名稱，但您可編輯 new_post_name 設定來變更預設的檔案名稱，舉例來說，設為1:year-:month-:day-:title.md可讓您更方便的透過日期來管理文章。變數 描述:title 標題:year 建立年份（4 位數）:month 建立月份（2 位數）:i_month 建立月份（去掉開頭的零）:day 建立日期（2 位數）:i_day 建立日期（去掉開頭的零）草稿在建立時會被儲存於 source/_drafts 資料夾，你可以透過1hexo publish [layout] &lt;title&gt;將草稿從source/_drafts資料夾移動到 source/_posts 資料夾。在執行時加上 --draft 選項，或是把 render_drafts 設定改為 true 來預覽草稿。鷹架（Scaffold）在建立文章時，Hexo 會根據 scaffolds 資料夾內相對應的檔案來建立檔案，例如：hexo new photo "My Gallery"在執行這行指令時，Hexo 會嘗試在 scaffolds 資料夾中找尋 photo.md，並根據其內容建立文章，以下是您可在鷹架中使用的變數：變數 描述layout 佈局title 標題date 檔案建立日期編輯文章Front-matter 是檔案最上方以 — 分隔的區域，用於指定個別檔案的變數，舉例來說：12345678---title: Hello Worlddate: 2019/9/22 20:46:25categories: - hi - hellotages: [hi,hello]---以下是預先定義的設定，您可在模板中取得這些設定值並加以利用。設定 描述 預設值layout 佈局title 標題date 建立日期 檔案建立日期updated 更新日期 檔案更新日期comments 開啟文章的留言功能 truetags 標籤（不適用於分頁）categories 分類（不適用於分頁）permalink 覆蓋文章網址keywords 僅用在 meta 和 Open Graph 的關鍵詞（不建議使用）分類和標籤分類和標籤只有文章才支援，您可以在 Front-matter 中設定。在其他系統中，分類和標籤可能聽起來很接近，但是在 Hexo 中有著決定性的差別：分類是有順序和階層性的，也就是說 Foo, Bar 不等於 Bar, Foo；而標籤沒有順序和階層。12345categories:- Diarytags:- PS3- Games此外我們可以透過 list 來對一篇文章同時定義多個分類。1234categories:- [Diary, PlayStation]- [Diary, Games]- [Life]JSON Front-matter除了 YAML 外，你也可利用 JSON 來撰寫 Front-matter，只要將 — 代換成 ;;; 即可。123"title": "Hello World","date": "2013/7/13 20:46:25";;;強制換行只需要輸入1&lt;br/&gt;例如： 我想換行，換行。插入圖片1![描述文字](圖片路徑或URL)插入指定大小圖片1{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}插入鏈接1![文字](鏈接 "文字")效果：我的部落格表格12345| 表頭1|表頭2|表頭3|表頭4|-| :- | :-: | -: ||默認左對齊|左對齊|居中對齊|右對齊||默認左對齊|左對齊|居中對齊|右對齊||默認左對齊|左對齊|居中對齊|右對齊|效果：表頭1表頭2表頭3表頭4默認左對齊左對齊居中對齊右對齊默認左對齊左對齊居中對齊右對齊默認左對齊左對齊居中對齊右對齊繼續閱讀插入123456789101112&lt;!--more--&gt;``` 更多語法請參考：[Markdown Guide基礎語法](https://www.markdownguide.org/basic-syntax "Markdown Guide基礎語法") 和 [Markdown Guide擴展語法](https://www.markdownguide.org/extended-syntax "Markdown Guide擴展語法")### 插入注腳需要安裝 `hexo-footnotes` 插件在blog根目錄Git bash執行：npm install hexo-footnotes --save12打開_config.yml下方加入plugins:hexo-footnotes1234567891011121314使用方法：```markdownbasic footnote[^1]here is an inline footnote[^2](inline footnote)and another one[^3]and another one[^4][^1]: basic footnote content[^3]: paragraphfootnotecontent[^4]: footnote content with some [markdown](https://en.wikipedia.org/wiki/Markdown)效果：插入音樂插入音樂，需要使用插件hexo-tag-aplayer，語法如下：1{% meting "id" "server" "type" "autoplay" "mutex:false" "listmaxheight:340px" "preload:none" "theme:#ad7a86"%}插入網易雲歌單1{% meting "歌單id號" "netease" "playlist" "autoplay" "theme:#555" "mutex:true" "listmaxheight:340px" %}console.error("ReferenceError: value is not defined")Hexo 搭建系列 - 插入音樂與影片hexo-tag-aplayer 本站測試插入影片Youtube1{% youtube video_id %}B站1&lt;iframe width="100%" height="400" src="//player.bilibili.com/player.html?aid=67104528&amp;cid=118581353&amp;page=2" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt;或者可以安裝hexo-tag-bilibili插件。通用123&lt;video width="100%" height="400" src="movie.mp4" controls="controls"&gt;The `&lt;video&gt;` tag is not supported by your browser.&lt;/video&gt;插入HEXO自帶圖標HEXO自帶Font Awesome的所有圖標，可以貼上HTML來使用。例如：1&lt;i class="fas fa-cat"&gt;&lt;/i&gt;顯示效果 發布文章只需要生成加部署兩步驟即可。12hexo generatehexo deploy你也可以將這兩個命令縮成一句hexo g -d 參考資料Hexo 寫作文件Markdown語法說明Hexo Markdown 简明语法手册 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HELLO]]></title>
    <url>%2Fposts%2F57665%2F</url>
    <content type="text"><![CDATA[一個測試文章Emoji表情測試❤️💙💜🖤💔❣️💕💞💓test hexo-admin且不问结果如何，尽自己之所能，积极的面对。 本文旨在介绍样式的使用规则。标题 1标题 2标题 3这是选项卡 1这是选项卡 2这是选项卡 3test document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
  </entry>
  <entry>
    <title><![CDATA[Github + Hexo 新手搭建手冊(含各種TIPS與問題解決)]]></title>
    <url>%2Fposts%2F30115%2F</url>
    <content type="text"><![CDATA[什麼是 Hexo？Hexo 是一個快速、簡單且強大的網誌框架。Hexo 使用 Markdown（或其他渲染引擎）解析您的文章，並在幾秒鐘內，透過漂亮的主題產生靜態檔案。因為它能快速並且簡單的搭建自己的部落格，因此越來越多人開始使用HEXO。你可以很輕易地透過官網的教程安裝HEXO，但若你是對這方面完全陌生的"小白"，你可以透過本篇文章完美安裝HEXO，在教程當中會提供各種可能在安裝過程中會遇到的錯誤解決方式，若還是無法成功安裝的人歡迎在回復當中詢問，我會嘗試幫你解答。準備工作你只需要安裝以下兩種軟體，就可以開始搭建。Node.js (建議使用10.0及以上版本)Git什麼是Node.js？Node.js是一個能夠在伺服器端運行JavaScript的開放原始碼、跨平台JavaScript執行環境。Node.js大部分基本模組都用JavaScript語言編寫。在Node.js出現之前，JavaScript通常作為用戶端程式設計語言使用，以JavaScript寫出的程式常在用戶的瀏覽器上執行。 Node.js的出現使JavaScript也能用於伺服器端編程。Node.js含有一系列內置模組，使得程式可以脫離Apache HTTP Server或IIS，作為獨立伺服器執行。什麼是Git？什麼是GithubGit 是一個分散式版本控制軟體，最初由 Linus Torvalds 創作（也是作業系統 Linux 系統的開發者），其最初目的是為更好地管理 Linux kernel 開發而設計，其具備優秀的 merge tracing 合併程式碼的能力（使用程式碼 snapshot 來比較歷史版本差異）。Github 則是一個支援 git 程式碼存取和遠端托管的平台服務，有許多的開放原始碼的專案都是使用 Github 進行程式碼的管理。若是讀者未來有志於從事程式設計相關工作的話，建議可以熟悉掌握 Git 和 Github 的使用，並建立自己的 Github profile 作品集。若對Git使用上有任何問題，可以參考這個網站：連猴子都能懂的Git入門指南安裝Git與Node.jsGitMac使用 Homebrew，MacPorts 或下載 安裝程序 安裝Linux（Ubuntu，Debian)1sudo apt-get install git-coreLinux（Fedora，Red Hat，CentOS)1sudo yum install git-coreWindows到Git官網下載合適版本：下載鏈結下載好之後會有Git Bash、Git CMD、Git GUI，我們需要利用Git Bash來操作GIT。下載成功之後打開Git Bash，輸入git --version回車，若版本正確則代表安裝成功。Node.js接著安裝Node.js。Hexo基於Node.js，所以需要安裝Node.js及npm。有兩種辦法：(新手建議直接下載安裝)使用nvm安裝 (安裝NVM來安裝node.js)直接下載安裝：下載鏈結（選擇LTS下載適合版本即可）若安裝完之後，在Git Bash輸入：12node -vnpm -v確認版本正確則代表安裝成功。安裝HEXO若上述必備軟體都已經成功安裝，那你就可以打開Git Bash輸入下方指令，透過npm即可完成HEXO的安裝。1npm install hexo-cli -g然後檢查是否安裝成功1hexo -v若無出現錯誤代表安裝成功。若你在這一步出現bash: hexo command not found，很有可能是你的npm\node_modules\hexo-cli\bin並未加入環境變量，可以參考這篇文章。建置部落格在電腦隨便一個地方新建一個資料夾作為部落格的目錄，我將資料夾命名為blog（請將blog改成你的資料夾名），然後執行下方指令。1hexo init blog若出現INFO Start blogging with Hexo!代表成功。接著輸入 cd blog 進入blog內，然後輸入npm install。建立完成後會出現以下檔案：.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes_config.yml網站配置檔案，您可以在此配置大部分的設定。package.json應用程式資料。EJS, Stylus 和 Markdown renderer 已預設安裝，您可以稍後移除。scaffolds存新文章及新頁面的初始設置。source存文章、頁面、圖片…等檔案。 資料夾名稱開頭為 _ (底線) 和隱藏檔案會被忽略，除了 _posts 資料夾以外。 Markdown 和 HTML 檔案會被處理並放到 public 資料夾，而其他檔案會被拷貝過去。themes主題資料夾。Hexo 會根據主題來產生靜態檔案。之後才會出現的目錄：node_modulesnode.js 各種庫的目錄。public生成靜態文件目錄。本地測試Git Bash輸入下方命令：12hexo -ghexo server若出現INFO Hexo is running at http://localhost:4000 …，打開瀏覽器輸入http://localhost:4000 即可看到生成的部落格頁面。Ctrl+C可關閉本地服務。將Hexo部署到Github你首先需要註冊Github帳號，並且登入新建一個repository，命名格式：用戶名.github.io(若是不會註冊，請參考這篇文章。)例如我的用戶名為ZENreal，我的repository name就應該輸入 ZENreal.github.io，若不按照這個格式命名，之後部署到Github pages時才會被識別。(而這個repository name就是訪問你部落格的鏈結)配置SSH打開Git Bash輸入：12git config --global user.name "Github 用戶名"git config --global user.email "Github Email"成功後會生成本地密鑰，請輸入以下命令檢查是否正確。12git config user.namegit config user.email確認無誤之後輸入：1ssh-keygen -t rsa -C "Github Email"創建SSH。當出現Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):時請按Enter。Enter passphrase (empty for no passphrase):(輸入加密串) Enter same passphrase again:(再次輸入加密串) 這個密碼會在你提交項目時使用，如果為空提交項目時則不用輸入。這是防止別人往你的項目裡提交內容。接著你可以在你的user資料夾內找到.ssh這個資料夾，裡頭會有id_rsa、id_rsa.pub。id_rsa是你電腦的私人密鑰，id_rsa.pub是公共密鑰。你需要把公共密鑰放到Github使得公鑰能夠匹配私鑰，才能通過Git將你的檔案上傳到Github。使用文字檔打開id_rsa.pub，將裡頭內容複製，貼到 Github(右上角頭像旁倒三角形) -&gt; Settings -&gt; SSH and GPG keys -&gt;New SSH key -&gt; Key中。你有可能會遇到的問題：Connecting to GitHub with SSHError: Permission denied (publickey)部署到Github打開部落格目錄，找到配置檔案_config.yml(使用sublime打開)，拉到最底下 deploy片段，按照以下格式修改：1234deploy: type: git repository: git@github.com:你的github用戶名/你的github用戶名.github.io.git branch: master注意：冒號必須使用英文半形，且冒號後方都必須空一格。type,repository,branch前方必須空兩格英文半形。若你不知道repository: 該如何填寫，到你的repository 右下方Clone -&gt; Use SSH 複製框裡頭的內容貼上即可。在部落格目錄下打開Git Bash，輸入下方命令開始安裝deploy-git。1npm install hexo-deployer-git --save然後執行:1hexo generate執行1hexo deploy若出現INFO Deploy done: git則代表部署成功，接著你就可以打開瀏覽器輸入 http://yourname.github.io 瀏覽你的部落格。安裝部落格主題(Themes)hexo官方提供了多種主題免費使用，你可以到Themes|Hexo下載喜歡的主題。下載好之後，打開你的部落格目錄，將剛剛下載好的主題解壓縮放進\themes裡。打開_config.yml，找到12#Extensionstheme: landscape將theme後面改成你的主題名稱然後存檔。打開Git Bash，輸入：123hexo clean (每次換主題都要clean)hexo generate (hexo g)hexo deploy (hexo d)如此一來主題就更換完成了。你也可以透過 git clone 主題地址 存放位置來安裝主題，請在安裝前先閱讀該主題的README.md文件。修改主題配置：修改themes/主題名稱/_config.yml打開RSS執行如下命令：1npm install hexo-generator-feed --save在./_config.yml中添加:1234feed: type: atom path: atom.xml limit: 20常用指令hexo generate (hexo g) #生成靜態文件，會在當前目錄下生成一個public資料夾hexo server(hexo s) #啟用本地WEB服務，用於預覽 (http://localhost:4000)hexo deploy(hexo d) #部署BLOG到遠端（比如github）hexo new postName #新建文章hexo new page pageName #新建頁面hexo --debug #檢查BUGnpm uninstall 插件名稱 #卸載插件生成文章後會存在 部落格資料夾\source\_posts 目錄底下，默認格式是.md檔，md就是指markdown語法，這邊建議使用Sublime來寫文章。注意事項推薦使用Sublime Text來修改配置檔案！！！你才能確認格式沒有錯誤！！！如果格式錯誤，例如冒號是全形、冒號後方沒有空格、空格是全形…等，是不會變色的，你就知道你有輸入錯誤了。使用Sublime Text修改部落格配置：language: 網站使用的語言，可以參考 2-lettter ISO-639-1 code，預設為 en。 (建議設成zh-TW)timezone: 網站時區，Hexo 預設使用您電腦的時區，您可以在 時區列表 尋找適當的時區。url: 網站的網址root: 網站的根目錄permalink: 文章 永久連結 的格式 :year/:month/:day/:title/ (不滿意這個格式可以下載hexo-abbrlink插件)你可能在使用Hexo途中遇到問題，請參考Hexo官方文件。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>git</tag>
        <tag>node.js</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
</search>
